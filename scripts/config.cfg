#! /bin/bash

TVpath=../TV; # REMEMBER / at the end of path! identifies the path to the folder containing tv shows
MoviesPath=../Movies; #l identifies the path to the folder containing movies

#dbNameMovie="../dbM.json" # identifies path and name of the movie database
#dbNameTV="../zdbTV.json" # identifies path and name of the tv show database

dbNameMovie="$MoviesPath/dbM.json" # identifies path and name of the movie database for the Docker container
dbNameTV="$TVpath/dbTV.json" # identifies path and name of the tv show database for the Docker container

# regex used to identify tv shows, uses the sS1eE01 or sS01eE01 or 01x01 or 1x01 format, in that order
regexTV1="(.*)[ .][sS]([0-9]{1})[eE]([0-9]{2})[ .](.*)"
regexTV2="(.*)[ .][sS]([0-9]{2})[eE]([0-9]{2})[ .](.*)"
regexTV3="(.*)[.]([0-9]{2})[x]([0-9]{2})[.](.*)"
regexTV4="(.*)[.]([0-9]{1})[x]([0-9]{2})[.](.*)"

regexM="(.*)[.](.*)"; # movie regex

TVhtml=../TV.html #path to the TV html page
Mhtml=../Movies.html #path to the movie html page

dTVImg=true #download TV poster images true/false
dTVFolder=../TVimg/ #path to folder containing the images once downloaded
imgResizeTV="-resize 500x -gravity center -crop 500x735+0+0" # argument/s for imagemagick if empty nothing happens
compressImgTV=false #wether the image should be comprossed

#exactly the same as above
dMoImg=true
dMoFolder=../MoImg/
imgResizeMo="-resize 350x"
compressImgMo=true

fetchTVmetadata=true #download tv show metadata
getEpisodeName=true #download every episode name
createTVsubs=true #search for subs in same folder
fetchMmetadata=true #same as above
createMsubs=true

#your tinyPNG api key
tinyPNGapi=""
#If you wish to load your key from a config file elsewhere, please do so here.
if [ -f "tmdbapi.cfg" ]; then
        . tmdbapi.cfg
#This is important for docker, but can also be used for a config file
elif [ -f "$HOME/.api_keys/tmdbapi.cfg" ]; then
        . "$HOME/.api_keys/tmdbapi.cfg"
#Otherwise, set it below
elif [ -z "$TMDBapi" ]; then
        TMDBapi=""
fi
